#!/bin/bash

source network-reconnect

red='\e[0;31m'
green='\e[0;32m'
blue='\e[0;36m'
purple='\e[0;35m'
nocolor='\e[0m'
bold=`tput bold`
normal=`tput sgr0`
echo -e "${blue}${bold}Network Reconnect is a utility designed to make managing wired and wireless network connections easy. It is not nearly complete or feature-complete, and only WEP and standard Ethernet are supported at this time. You are currently using the CLI (Command-Line Interface).${normal}${nocolor}"

case "$1" in
  -a|--automatic)
    case "$2" in
      "")
        echo -e "${red}${bold}Invalid argument. Please specify 'wifi' or 'ethernet'.${normal}${nocolor}"
      ;;
      *)
        if [ "$2" == "wifi" ] || [ "$2" == "ethernet" ]
        then
          if [ "$2" == "wifi" ]
          then
            echo -e "${purple}${bold}Finding wifi connections...${normal}${nocolor}"
            getKernelModule
            echo -e "${purple}${bold}Loading kernel module" $kernelmodule"...${normal}${nocolor}"
            modprobe $kernelmodule
            getWifiInterface
            if [ -z $wifiinterface ]
            then
              getWifiCard
              if [ -z $wirelesscard ]
              then
                echo -e "${red}${bold}No wireless networking interfaces found. It appears that your computer does not have a wireless networking card.${normal}${nocolor}"
              else
                echo -e "${red}${bold}No wireless networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
              fi
              exit
            fi
            echo -e "${purple}${bold}Selecting interface" $wifiinterface"...${normal}${nocolor}"
            wifiInterfaceUp
            echo -e "${purple}${bold}Available networks:${normal}${purple}"
            getNetworkSSID
            echo -e "${purple}${bold}Enter a network name (SSID) from above: ${normal}${nocolor}"
            read networkssid
            echo -e "${purple}${bold}Enter the network password (authenication key): ${normal}${nocolor}"
            read networkkey
            wifiConnect
            echo -e "${purple}${bold}Local IP information:${normal}${purple}"
            if ifconfig $wifiinterface | grep 192.168.1.
            then
              echo -e "${green}${bold}Connected to network" $networkssid".${normal}${nocolor}"
              network-checker $wifiinterface $networkssid $networkkey &
              echo -e "${green}${bold}Background daemon started.${normal}${nocolor}"
            else
              echo -e "${red}${bold}Connection failed. Perhaps you entered something incorrectly. Try again.${normal}${nocolor}"
            fi
          else
            echo -e "${purple}${bold}Finding ethernet connections...${normal}${nocolor}"
            getEthInterface
            if [ -z $ethinterface ]
            then
              echo -e "${red}${bold}No ethernet interfaces found.${normal}${nocolor}"
              exit
            fi
            echo -e "${purple}${bold}Selecting interface" $ethinterface"...${normal}${nocolor}"
            ethInterfaceIp
            echo -e "${purple}${bold}Local IP information:${normal}${purple}"
            if ifconfig $ethinterface | grep 192.168.1.
            then
              echo -e "${green}${bold}Connected to network.${normal}${nocolor}"
            else
              echo -e "${red}${bold}No information avaiable. Connection failed.${normal}${green}"
            fi
          fi
        else
          echo -e "${red}${bold}Invalid argument. Please specifiy 'wifi' or 'ethernet'.${normal}${nocolor}"
        fi
      ;;
    esac
  ;;
  -d|--disconnect)
    case "$2" in
      "")
        if ifconfig | grep -q 192.168.1.
        then
          :
        else
          echo -e "${red}${bold}You are already disconnected. Cannot disconnect.${normal}${nocolor}"
          exit
        fi
        getWifiInterface
        getEthInterface
        if [ -z $wifiinterface ] && [ -z $ethinterface ]
        then
          getWifiCard
          if [ -z $wirelesscard ]
          then
            echo -e "${red}${bold}No networking interfaces found. It appears that your computer does not have a networking controller.${normal}${nocolor}"
          else
            echo -e "${red}${bold}No networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
          fi
          exit
        fi
        if [ -z $wifiinterface ]
        then
          :
        else
          echo -e "${purple}${bold}Selecting interface" $wifiinterface"...${normal}${nocolor}"
          echo -e "${purple}${bold}Sending interface" $wifiinterface "down...${normal}${nocolor}"
          wifiDisconnect
        fi
        if [ -z $ethinterface ]
        then
          :
        else
          ethDisconnect
        fi
        if ifconfig | grep -q 192.168.1.
        then
          echo -e "${red}${bold}Disconnection failed.${normal}${nocolor}"
        else
          if [ -z $wifiinterface ]
          then
            echo -e "${green}${bold}Interface" $wifiinterface "disconnected.${normal}${nocolor}"
          fi
          if [ -z $ethiinterface ]
          then
            echo -e "${green}${bold}Interface" $ethinterface "disconnected.${normal}${nocolor}"
          fi
        fi
      ;;
      *)
        if [ "$2" == "wlan0" ] || [ "$2" == "wlp3s0" ] || [ "$2" == "wlo1" ]
        then
          wifiinterface=$2
          if ifconfig $wifiinterface | grep 192.168.1.
          then
            echo -e "${red}${bold}You are already disconnected. Cannot disconnect.${normal}${nocolor}"
            exit
          fi
          echo -e "${purple}${bold}Selecting interface" $wifiinterface"...${normal}${nocolor}"
          echo -e "${purple}${bold}Sending interface" $wifiinterface "down...${normal}${nocolor}"
          wifiDisconnect
        else
          if [ "$2" == "eth0" ] || [ "$2" == "enp4s0" ]
          then
            ethinterface=$2
            if ifconfig $ethinterface | grep 192.168.1.
            then
              echo -e "${red}${bold}You are already disconnected. Cannot disconnect.${normal}${nocolor}"
              exit
            fi
            echo -e "${purple}${bold}Selecting interface" $ethinterface"...${normal}${nocolor}"
            echo -e "${purple}${bold}Sending interface" $ethinterface "down...${normal}${nocolor}"
            ethDisconnect
          fi
        fi
        if ifconfig | grep -q 192.168.1.
        then
          echo -e "${red}${bold}Disconnection failed.${normal}${nocolor}"
        else
          if [ -z $wifiinterface ]
          then
            :
          else
            echo -e "${green}${bold}Interface" $wifiinterface "disconnected.${normal}${nocolor}"
          fi
          if [ -z $ethiinterface ]
          then
            :
          else
            echo -e "${green}${bold}Interface" $ethinterface "disconnected.${normal}${nocolor}"
          fi
        fi
      ;;
    esac
  ;;
  -e|--enable)
    case "$2" in
      "")
        echo -e "${red}${bold}Invalid argument. Please specify networking interface.${normal}${nocolor}"
      ;;
      *)
        if [ "$2" == "wlan0" ] || [ "$2" == "wlp3s0" ] || [ "$2" == "wlo1" ]
        then
          case "$3" in
            "")
              echo -e "${red}${bold}Invalid argument. Please specify a network name (SSID).${normal}${nocolor}"
            ;;
            *)
              case "$4" in
                "")
                  echo -e "${red}${bold}Invalid argument. Please specify the network password (authenication key).${normal}${nocolor}"
                ;;
                *)
                  wifiinterface=$2
                  networkssid=$3
                  networkkey=$4
                  wifiEnable
                  echo -e "${green}${bold}Network Reconnect service activated.${normal}${nocolor}"
                ;;
              esac
            ;;
          esac
        else
          if [ "$2" == "eth0" ] || [ "$2" == "enp4s0" ]
          then
            ethinterface=$2
            ethEnable
            echo -e "${green}${bold}Network Reconnect service activated.${normal}${nocolor}"
          else
            echo -e "${red}${bold}Invalid argument. Please specify networking interface.${normal}${nocolor}" 
          fi
        fi
      ;;
    esac
  ;;
  -h|--help|"")
    echo "network-reconnect -- utility designed to make managing wired and wireless easy"
    echo "Usage: network-reconnect [OPTION] [ARGUMENTS]"
    echo "Where:"
    echo "    -a, --automatic      connect to network automatically"
    echo "        TYPE             connection type: 'wifi' or 'ethernet' (required)"
    echo "    -d, --disconnect     disconnect from network(s)"
    echo "        INTERFACE        network interface to disconnect from (optional)"
    echo "    -e, --enable         enable network-reconnect at startup"
    echo "        INTERFACE        network interface to enable (required)"
    echo "        NETWORK SSID     name of network to connect to (required for wireless connections)"
    echo "        NETWORK KEY      password for network to connect to (required for wireless connections)"
    echo "    -h, --help           show this help text"
    echo "    -i, --interface      start network-reconnect shell interface"
    echo "    -l, --list           list available networking interfaces"
    echo "    -m, --manual         manually connect to network"
    echo "    -n, --show-networks  show available wireless networks"
    echo "        INTERFACE        network interface to use (required)"
    echo "        NETWORK SSID     name of network to connect to (required for wireless connections)"
    echo "        NETWORK KEY      password for network to connect to (required for wireless connections)"
    echo "    -s, --status         print current network status"
    echo "        INTERFACE        network interface to display (optional)"
  ;;
  -i|--interface)
    echo -e "${red}${bold}Shell interface not yet complete.${normal}${nocolor}"
  ;;
  -l|--list)
    case "$2" in
      "")
        getKernelModule
        modprobe $kernelmodule
        getWifiInterface
        getEthInterface
        if [ -z $wifiinterface ]
        then
          :
        else
          echo -e "${purple}${bold}Wireless networking interface:${normal}${purple}"
          echo $wifiinterface
        fi
        if [ -z $ethinterface ]
        then
          :
        else
          echo -e "${purple}${bold}Ethernet networking interface:${normal}${purple}"
          echo $ethinterface
        fi
        if [ -z $wifiinterface ] && [ -z $ethinterface ]
        then
          lspciwireless=`lspci -k | grep -i -A 3 wireless`
          getWifiCard
          if [ -z $wirelesscard ]
          then
            echo -e "${red}${bold}No wireless networking interfaces found. It appears that your computer does not have a wireless networking card.${normal}${nocolor}"
            else
              echo -e "${red}${bold}No wireless networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
          fi
          exit
        fi
      ;;
      *)
        if [ "$2" == "wifi" ] || [ "$2" == "ethernet" ]
        then
          if [ "$2" == "wifi" ]
          then
            getKernelModule
            modprobe $kernelmodule
            getWifiInterface
            if [ -z $wifiinterface ]
            then
              getWifiCard
              if [ -z $wirelesscard ]
              then
                echo -e "${red}${bold}No wireless networking interfaces found. It appears that your computer does not have a wireless networking card.${normal}${nocolor}"
              else
                echo -e "${red}${bold}No wireless networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
              fi
              exit
            fi
            echo -e "${purple}${bold}Wireless networking interface:${normal}${purple}"
            echo $wifiinterface
          else
            getEthInterface
            if [ -z $ethinterface ]
            then
              echo -e "${red}${bold}No ethernet interfaces found.${normal}${nocolor}"
              exit
            fi
            echo -e "${purple}${bold}Ethernet networking interface:${normal}${purple}"
            echo $ethinterface
          fi
        else
          echo -e "${red}${bold}Invalid argument. Please specifiy 'wifi' or 'ethernet'.${normal}${nocolor}"
        fi
      ;;
    esac 
  ;;
  -m|--manual)
    case "$2" in
      "")
        echo -e "${red}${bold}Invalid argument. Please specify networking interface.${normal}${nocolor}"
      ;;
      *)
        if [ "$2" == "wlan0" ] || [ "$2" == "wlp3s0" ] || [ "$2" == "wlo1" ]
        then
          case "$3" in
            "")
              echo -e "${red}${bold}Invalid argument. Please specify a network name (SSID).${normal}${nocolor}"
            ;;
            *)
              case "$4" in
                "")
                  wifiinterface=$2
                  networkssid=$3
                  getKernelModule
                  echo -e "${purple}${bold}Loading kernel module" $kernelmodule"...${normal}${nocolor}"
                  modprobe $kernelmodule
                  echo -e "${purple}${bold}Selecting interface" $wifiinterface"...${normal}${nocolor}"
                  wifiInterfaceUp
                  wifiConnect
                  echo -e "${purple}${bold}Local IP information:${normal}${purple}"
                  if ifconfig $wifiinterface | grep 192.168.1.
                  then
                    echo -e "${green}${bold}Connected to network" $networkssid".${normal}${nocolor}"
                    case "$5" in
                      "")
                        echo -e "${purple}${bold}Background daemon will not be started.${normal}${nocolor}"
                      ;;
                      *)
                        network-checker $wifiinterface $networkssid $networkkey &
                        echo -e "${green}${bold}Background daemon started.${normal}${nocolor}"
                      ;;
                    esac
                  else
                    echo -e "${red}${bold}Connection failed.${normal}${nocolor}"
                  fi
                ;;
                *)
                  wifiinterface=$2
                  networkssid=$3
                  networkkey=$4
                  getKernelModule
                  echo -e "${purple}${bold}Loading kernel module" $kernelmodule"...${normal}${nocolor}"
                  modprobe $kernelmodule
                  echo -e "${purple}${bold}Selecting interface" $wifiinterface"...${normal}${nocolor}"
                  wifiInterfaceUp
                  wifiConnect
                  echo -e "${purple}${bold}Local IP information:${normal}${purple}"
                  if ifconfig $wifiinterface | grep 192.168.1.
                  then
                    echo -e "${green}${bold}Connected to network" $networkssid".${normal}${nocolor}"
                    case "$5" in
                      "")
                        echo -e "${purple}${bold}Background daemon will not be started.${normal}${nocolor}"
                      ;;
                      *)
                        network-checker $wifiinterface $networkssid $networkkey &
                        echo -e "${green}${bold}Background daemon started.${normal}${nocolor}"
                      ;;
                    esac
                  else
                    echo -e "${red}${bold}Connection failed.${normal}${nocolor}"
                  fi
                ;;
              esac
            ;;
          esac
        else
          if [ "$2" == "eth0" ] || [ "$2" == "enp4s0" ]
          then
            ethinterface=$2
            echo -e "${purple}${bold}Selecting interface" $ethinterface"...${normal}${nocolor}"
            ethInterfaceUp
            echo -e "${purple}${bold}Local IP information:${normal}${purple}"
            if ifconfig $ethinterface | grep 192.168.1.
            then
              echo -e "${green}${bold}Connected to network.${normal}${nocolor}"
            else
              echo -e "${red}${bold}Connection failed.${normal}${nocolor}"
            fi
          else
            echo -e "${red}${bold}Invalid argument. Please specify networking interface.${normal}${nocolor}" 
          fi
        fi
      ;;
    esac
  ;;
  -n|--show-networks)
    getKernelModule
    echo -e "${purple}${bold}Loading kernel module" $kernelmodule"...${normal}${nocolor}"
    modprobe $kernelmodule
    getWifiInterface
    if [ -z $wifiinterface ]
    then
      getWifiCard
      if [ -z $wirelesscard ]
      then
        echo -e "${red}${bold}No wireless networking interfaces found. It appears that your computer does not have a wireless networking card.${normal}${nocolor}"
      else
        echo -e "${red}${bold}No wireless networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
      fi
      exit
    fi
    echo -e "${purple}${bold}Available wireless networks:${normal}${purple}"
    getNetworkSSID
  ;;
  -s|--status)
    case "$2" in
      "")
        getWifiInterface
        getEthInterface
        if [ -z $wifiinterface ] && [ -z $ethinterface ]
        then
          getWifiCard
          if [ -z $wirelesscard ]
          then
            echo -e "${red}${bold}No networking interfaces found. It appears that your computer does not have a networking controller.${normal}${nocolor}"
          else
            echo -e "${red}${bold}No networking interfaces found. Are you sure you have installed the appropriate drivers for your device?${normal}${nocolor}"
          fi
          exit
        fi
        if [ -z $wifiinterface ]
        then
          :
        else
          getWifiCard
          echo -e "${purple}${bold}Wireless card information:${normal}${purple}"
          echo $wirelesscard
          getKernelModule
          if [ -z $kernelmodule ]
          then
            echo -e "${purple}${bold}No kernel modules loaded for wireless networking.${normal}${purple}"
          else
            echo -e "${purple}${bold}Kernel module" $kernelmodule "loaded for wireless networking.${normal}${purple}"
          fi
          echo -e "${purple}${bold}Interface status for" $wifiinterface":${normal}${purple}"
          infoWifiInterface
          echo -e "${purple}${bold}Detailed network status for" $wifiinterface":${normal}${purple}"
          statusWifiInterface
        fi
        if [ -z $ethinterface ]
        then
          :
        else
          echo -e "${purple}${bold}Interface status for" $ethinterface":${normal}${purple}"
          infoEthInterface
          echo -e "${purple}${bold}Detailed network status for" $ethinterface":${normal}${purple}"
          statusEthInterface
        fi
      ;;
      *)
        if [ "$2" == "wlan0" ] || [ "$2" == "wlp3s0" ] || [ "$2" == "wlo1" ]
        then
          wifiinterface=$2
          echo -e "${purple}${bold}Interface status for" $wifiinterface":${normal}${purple}"
          infoWifiInterface
          echo -e "${purple}${bold}Detailed network status for" $wifiinterface":${normal}${purple}"
          statusWifiInterface
        else
          if [ "$2" == "eth0" ] || [ "$2" == "enp4s0" ]
          then
            ethinterface=$2
            echo -e "${purple}${bold}Interface status for" $ethinterface":${normal}${purple}"
            infoEthInterface
            echo -e "${purple}${bold}Detailed network status for" $ethinterface":${normal}${purple}"
            statusEthInterface
          else
            echo -e "${red}${bold}Invalid argument. Please specify networking interface.${normal}${purple}" 
          fi
        fi
      ;;
    esac
  ;;
esac
